\part{Interface utilities}
\chapter{Compiler proper}

This file does all the chaining of the various parts of the compiler. It is responsible for calling the different parts of the compiler in the right order.

<<compiler settings>>=
#define SSMOUTPUT_FLAG {"", "ssm", \
	"Produce output for SSM virtual machine"}
COMPILER_SETTING(bool, ssmoutput, false, SSMOUTPUT_FLAG)
@

<<main.cpp>>=
#include "token.h"
#include "parser.h"
#include "typecheck.h"
#include "ir.h"
#include "irgeneration.h"
#include "splruntime.h"
#include "settings.h"
#include "ssm.h"
#include "amd64.h"
#include "error.h"
#include "constprop.h"
#include <cstdio>
#include <map>

using namespace std;

void initialize_tables();
void cleanup_tables();

int main(int argc, char **argv)
{
	vector<string> inputfiles = parse_commandline(argc, argv);
	
	if (inputfiles.size() != 1)
		exit(1);
	
	tok_setinput(inputfiles[0]);
	
	ast_program *program = parse_program();
	typecheck_program(program);
	
	if (eh_haveerror())
		return 1;
	
	ir_module *module = irgen_translate_program(program);
	
	generate_runtime(module);
	
	cp_rewrite_module(module);
	
	//module->print();
	
	typecheck_cleanup();
	delete program;
	
	if (ssmoutput)
	{
		ssm_translate_module(module, stdout);
	}
	else
	{
		amd64_translate_module(module, stdout);
	}
	
	delete module;
	
	return 0;
}
@
